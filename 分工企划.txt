1. 核心部分层次:

创意
    想法起因, 设计理念
    整体设计/综合描述
    功能详细说明

可行性分析
    根据创意, 和功能论述
    
    理念和预期目标的可行性
    竞品分析(市场分析)
        优势
        缺点
        未来方向/应用前景
        目标受众/市场需求
        部署场景

2. 分工:
时间线: 
    2.5-2.15 内容丰富期
        围绕核心理念, 进行想法的创新, 功能的添加
            期间不进行整体创作. 每天晚上可以固定时间进行交流探讨, 交流彼此想法.
        期间主要集中研究 "可行性分析""创意" 两模块
            进行创新时, 要注意同时需要提供足够的可行性材料, 和相应的类似市场产品资料, 方便后期处理.
            也就是说此期间, 需要围绕核心理念, 进行功能创新或辩证, 可行性论证, 并提供相关详尽资料
    2.15-2.25 论文写作期
        排版, 写作与整理
        进行目录/摘要/结论/引用等边角料处理.(这里好分工, 但需要核心部分的资料详尽完备, 不能缺斤少两)

3. 理念重申与引申:
建造一款浏览器插件, 或百科插件

作用是!!!通过对页面关键词的抓取和分析, 推测所需前置学习知识. 
并且允许人们!!!在浏览完问题之后, 随手对页面进行打分( 简单的五星制度, 或单纯的好坏/百分比), 这样通过集成装置, 就可以实现对页面内容质量的一部分甄别.
    (这样做, 主要的原因在于, 如今中文互联网环境恶化, 很多水字数而不能解决问题的文章大行其道; 废话文学, 下面就和小编一起..啊小编也不会; 去外网机器翻译爬虫文章一大把, 语句都不能通顺)
从而避免不同知识层次和需求的人, 因为不符合理解页面所需的知识水平,强行理解应用, 造成时间浪费和损失
    有人是想搞懂问题
    有人是想解决问题

本人的新想法:
        造成互联网低效的除了内容残次不齐外
        1. 各大app除了本身的功能之外还推出了一大堆冗杂功能, 比如网易云/有道等工具app都想退出社区留住用户, 但是实际造成了用户使用环境的恶劣
            我们可不可以的制造一个软件, 对其进行优化. 只爬取各大app最本质最有用的功能, 但屏蔽其冗杂的功能, 同时能够节省空间
                逻辑就像市面上的RSS阅读器, 只爬取各大新闻和内容网站的优质内容,集成到自家ui界面上, 给用户洁净方便的体验.
        2. 软件的易用性和可操作性的反共轭性:
            vscode等真正自由的软件, 配置好了是天堂, 配置坏了是地狱
            但是有的人喜欢一切都给你配置好的产品(比如新手), 有的人却喜欢自由度高的产品
                更重要的是, 要考虑新手会变成老手, 会流失; 但不易用可能开头就不会吸引人来.
                !!!可不可以这两者之间的度交由用户掌握而不是开发者? 
                    制作一个评级系统, 五星是超级易用但简单; 一星是超级难学但自由度极高,会逼疯新手
        我们可不可以将我们的产品制造为一个改善国内互联网使用环境的集成装置?


4. 写在最后
粗略浏览各届获奖名单和作品, 发现获奖立意和作品并不是全是高大上的,
有些从名字就能看出来特别水. 这说明两点:
    1. 赛事机制存在很大主观性, 不同产品类型也可能有很大优劣势差别
    2. 赛事组应该权衡之下更看重论文的撰写, 创意论述的完备性可能比单纯的点子出彩更加占优势